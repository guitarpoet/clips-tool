;===============================================================================
;
; The default request route rules
; 
; This is the default requrest route rules(much like CI with a few tweaks)
;
; @version 1.0
; @author Jack <guitarpoet@gmail.com>
; @date Mon Feb  2 15:47:24 2015
;
;===============================================================================

(defrule explode-the-uri-to-segments
	(uri ?uri)
	=>
	(assert (segments (explode "/" ?uri)))
)

(defrule take-the-controller-and-method-seg
	(not (controller ?))
	(segments $?segs)
	=>
	(assert (controller (nth$ 1 $?segs)))
	(assert (method (nth$ 2 $?segs)))
)

(defrule try-to-find-controller-by-controller-seg
	(controller ?c&~"")
	(test (php_call "Clips\\controller_exists" ?c))
	=>
	(assert (Clips\RouteResult (controller (php_call "Clips\\controller_class" ?c))))
)

(defrule if-no-controller-is-found-using-the-controller-seg-show-error
	(declare (salience ?*low*))
	(controller ?c&~"")
	(not (test (php_call "Clips\\controller_exists" ?c)))
	=>
	(assert (RouteError (str-cat "No controller named " ?c " found!")))
)

(defrule use-default-index-method-if-no-method-set
	?m <- (method ""|nil)
	=>
	(retract ?m)
	(assert (method "index"))
)

(defrule if-is-ajax-prefer-ajax-suffix-method
	(RequestType "ajax")
	?method <- (method ?m&:(not (str-index "_ajax" ?m)))
	?r <- (Clips\RouteResult (controller ?c&~nil) (method nil))
	(test (method-exists ?c (str-cat ?m "_ajax")))
	=>
	(retract ?method)
	(assert (method (str-cat ?m "_ajax")))
)

(defrule if-is-post-prefer-form-suffix-method
	(RequestMethod "post")
	?method <- (method ?m&:(not (str-index "_form" ?m)))
	?r <- (Clips\RouteResult (controller ?c&~nil) (method nil))
	(test (method-exists ?c (str-cat ?m "_form")))
	=>
	(retract ?method)
	(assert (method (str-cat ?m "_form")))
)

(defrule insert-a-result-if-nothing-found
	(declare (salience ?*low*))
	(not (Clips\RouteResult))
	=>
	(assert (Clips\RouteResult))
)

(defrule set-the-method-to-result-if-the-method-matched
	(method ?m&~"")
	?r <- (Clips\RouteResult (controller ?c&~nil) (method nil))
	(test (method-exists ?c ?m))
	=>
	(modify ?r (method ?m))
)

(defrule set-the-args-to-the-result
	?r <- (Clips\RouteResult (controller ~nil) (method ~nil) (args $?args&:(= (length$ $?args) 0)))
	(segments $?segs)
	(test (> (length$ $?segs) 2))
	=>
	(modify ?r (args (rest$ (rest$ $?segs))))
)

(defrule if-the-method-is-not-found-at-all-then-error
	(method ?m&~"")
	?r <- (Clips\RouteResult (controller ?c&~nil) (method nil))
	(test (not (method-exists ?c ?m)))
	=>
	(assert (RouteError (str-cat "No method named " ?m " found in controller " ?c "!")))
)
